// <auto-generated />
using System;
using Hris.Infrastructure.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hris.Infrastructure.Database.Migrations
{
    [DbContext(typeof(HrisContext))]
    partial class HrisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.AbsenceType", b =>
                {
                    b.Property<Guid>("AbsenceTypeId");

                    b.Property<string>("AbsenceTypeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("AbsenceTypeName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<bool?>("Alpha")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("LeavingDeduction")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Present")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.HasKey("AbsenceTypeId");

                    b.ToTable("absence_type");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.ActionTaken", b =>
                {
                    b.Property<Guid>("ActionTakenId");

                    b.Property<string>("ActionTakenCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ActionTakenName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.HasKey("ActionTakenId");

                    b.ToTable("action_taken");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Asset", b =>
                {
                    b.Property<Guid>("AssetId");

                    b.Property<string>("AssetCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("AssetName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.HasKey("AssetId");

                    b.ToTable("asset");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Attendance", b =>
                {
                    b.Property<Guid>("AttendanceId");

                    b.Property<Guid?>("AbsenceTypeId");

                    b.Property<DateTime?>("ActualIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ActualOut")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("BreakIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("BreakOut")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<Guid?>("DayTypeId");

                    b.Property<DateTime?>("DefaultIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DefaultOut")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<TimeSpan?>("EffectiveHour");

                    b.Property<Guid?>("EmployeeId");

                    b.Property<string>("FingerCode")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<TimeSpan?>("LateIn");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("WorkHour");

                    b.HasKey("AttendanceId");

                    b.HasIndex("AbsenceTypeId");

                    b.HasIndex("DayTypeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("attendance");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Branch", b =>
                {
                    b.Property<Guid>("BranchId");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("BranchName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.HasKey("BranchId");

                    b.ToTable("branch");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.DayType", b =>
                {
                    b.Property<Guid>("DayTypeId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DayTypeName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<TimeSpan?>("DefaultIn");

                    b.Property<TimeSpan?>("DefaultOut");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<TimeSpan?>("FridayIn");

                    b.Property<TimeSpan?>("FridayOut");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<TimeSpan?>("SaturdayIn");

                    b.Property<TimeSpan?>("SaturdayOut");

                    b.Property<TimeSpan?>("SundayIn");

                    b.Property<TimeSpan?>("SundayOut");

                    b.HasKey("DayTypeId");

                    b.ToTable("day_type");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Department", b =>
                {
                    b.Property<Guid>("DepartmentId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("DepartmentCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("DepartmentName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.HasKey("DepartmentId");

                    b.ToTable("department");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Division", b =>
                {
                    b.Property<Guid>("DivisionId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid>("DepartmentId");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.HasKey("DivisionId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("division");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Education", b =>
                {
                    b.Property<Guid>("EducationId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EducationCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("EducationName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.HasKey("EducationId");

                    b.ToTable("education");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Bank")
                        .HasColumnName("bank")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BankAccountNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("BankBranch")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnName("birthdate")
                        .HasColumnType("date");

                    b.Property<string>("Birthplace")
                        .HasColumnName("birthplace")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Blood")
                        .HasColumnName("blood")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<Guid?>("BranchId");

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DayTypeId");

                    b.Property<Guid?>("DepartmentId");

                    b.Property<Guid?>("DivisionId");

                    b.Property<Guid?>("EducationId");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("EmployeeStatusId");

                    b.Property<Guid?>("EmployeeTypeId");

                    b.Property<DateTime?>("EmployeeTypeValidDate")
                        .HasColumnType("date");

                    b.Property<string>("FingerCode")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Gender")
                        .HasColumnName("gender")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<Guid?>("GradeId");

                    b.Property<string>("IdentityNo")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("IdentityType")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("date");

                    b.Property<string>("MaritalStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("MobileNo")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nationality")
                        .HasColumnName("nationality")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("NickName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Nik")
                        .HasColumnName("nik")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("NpwpNo")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("ParentEmployeeId");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("PaymentType")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<Guid?>("PayrollTypeId");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<Guid?>("PositionId");

                    b.Property<string>("Province")
                        .HasColumnName("province")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Religion")
                        .HasColumnName("religion")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Shift")
                        .HasColumnName("shift")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("Tall")
                        .HasColumnName("tall");

                    b.Property<Guid?>("TaxStatusId");

                    b.Property<int?>("Weight")
                        .HasColumnName("weight");

                    b.HasKey("EmployeeId");

                    b.HasIndex("BranchId");

                    b.HasIndex("DayTypeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DivisionId");

                    b.HasIndex("EducationId");

                    b.HasIndex("EmployeeStatusId");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("GradeId");

                    b.HasIndex("PayrollTypeId");

                    b.HasIndex("PositionId");

                    b.HasIndex("TaxStatusId");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeAsset", b =>
                {
                    b.Property<Guid>("EmployeeAssetId");

                    b.Property<Guid?>("AssetId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("EmployeeId");

                    b.Property<DateTime?>("LendDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("date");

                    b.HasKey("EmployeeAssetId");

                    b.HasIndex("AssetId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("employee_asset");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeEducationFormal", b =>
                {
                    b.Property<Guid>("EmployeeEducationFormalId");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("EmployeeId");

                    b.Property<DateTime?>("From")
                        .HasColumnName("from")
                        .HasColumnType("date");

                    b.Property<byte[]>("Gpa")
                        .HasColumnName("gpa")
                        .HasMaxLength(10);

                    b.Property<string>("LevelEducationName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Majors")
                        .HasColumnName("majors")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SchoolName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Until")
                        .HasColumnName("until")
                        .HasColumnType("date");

                    b.HasKey("EmployeeEducationFormalId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("employee_education_formal");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeEducationUnformal", b =>
                {
                    b.Property<Guid>("EmployeeEducationUnformalId");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CourseType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("EmployeeId");

                    b.Property<DateTime?>("From")
                        .HasColumnName("from")
                        .HasColumnType("date");

                    b.Property<string>("HeldBy")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Object")
                        .HasColumnName("object")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Until")
                        .HasColumnName("until")
                        .HasColumnType("date");

                    b.HasKey("EmployeeEducationUnformalId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("employee_education_unformal");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeExperience", b =>
                {
                    b.Property<Guid>("EmployeeExperienceId");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("BusinessType")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("EmployeeId");

                    b.Property<DateTime?>("From")
                        .HasColumnName("from")
                        .HasColumnType("date");

                    b.Property<string>("LastPosition")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<double?>("LastSalary");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReasonSeparation")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Until")
                        .HasColumnName("until")
                        .HasColumnType("date");

                    b.HasKey("EmployeeExperienceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("employee_experience");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeFamily", b =>
                {
                    b.Property<Guid>("EmployeeFamilyId");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnName("birthdate")
                        .HasColumnType("date");

                    b.Property<string>("Birthplace")
                        .HasColumnName("birthplace")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("EducationId");

                    b.Property<Guid?>("EmployeeId");

                    b.Property<string>("Gender")
                        .HasColumnName("gender")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("Job")
                        .HasColumnName("job")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Relation")
                        .HasColumnName("relation")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("EmployeeFamilyId");

                    b.HasIndex("EducationId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("employee_family");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeSalary", b =>
                {
                    b.Property<Guid>("EmployeeSalaryId");

                    b.Property<string>("AttendanceAllowance")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("BasicSalary")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("BbmAllowance")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("EmployeeId");

                    b.Property<string>("FunctionalAllowance")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("MealAllowance")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PlaceAllowance")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("PlacementAllowance")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PositionAllowance")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("TelecommunicationAllowance")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("TransportAllowance")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("EmployeeSalaryId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("employee_salary");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeSkill", b =>
                {
                    b.Property<Guid>("EmployeeSkillId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid>("EmployeeId");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SkillLevel")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SkillName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("EmployeeSkillId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("employee_skill");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeStatus", b =>
                {
                    b.Property<Guid>("EmployeeStatusId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmployeeStatusCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("EmployeeStatusName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.HasKey("EmployeeStatusId");

                    b.ToTable("employee_status");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeType", b =>
                {
                    b.Property<Guid>("EmployeeTypeId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("EmployeeTypeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("EmployeeTypeName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.HasKey("EmployeeTypeId");

                    b.ToTable("employee_type");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Grade", b =>
                {
                    b.Property<Guid>("GradeId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("GradeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("GradeName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.HasKey("GradeId");

                    b.ToTable("grade");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.LeaveRemaining", b =>
                {
                    b.Property<Guid>("LeaveRemainingId");

                    b.Property<int?>("AdjLeave");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("EmployeeId");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Plafon")
                        .HasColumnName("plafon");

                    b.Property<int?>("Remaining")
                        .HasColumnName("remaining");

                    b.Property<int?>("Used")
                        .HasColumnName("used");

                    b.Property<int?>("Year")
                        .HasColumnName("year");

                    b.HasKey("LeaveRemainingId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("leave_remaining");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.LeavingRequest", b =>
                {
                    b.Property<Guid>("LeavingRequestId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("Days")
                        .HasColumnName("days");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("EmployeeId");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("LeavingTypeId");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NoTransaction")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ReasonRejected")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UntilDate")
                        .HasColumnType("date");

                    b.HasKey("LeavingRequestId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeavingTypeId");

                    b.ToTable("leaving_request");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.LeavingType", b =>
                {
                    b.Property<Guid>("LeavingTypeId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("LeavingDeduction")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LeavingTypeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("LeavingTypeName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.HasKey("LeavingTypeId");

                    b.ToTable("leaving_type");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.MedicalReimbursement", b =>
                {
                    b.Property<Guid>("MedicalReimbursementId");

                    b.Property<double?>("ClaimAmount");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateMedical")
                        .HasColumnType("date");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("EmployeeId");

                    b.Property<Guid?>("MedicalTypeId");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NoTransaction")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("PatientName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("MedicalReimbursementId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("MedicalTypeId");

                    b.ToTable("medical_reimbursement");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.MedicalType", b =>
                {
                    b.Property<Guid>("MedicalTypeId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MedicalTypeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("MedicalTypeName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.HasKey("MedicalTypeId");

                    b.ToTable("medical_type");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.PayrollType", b =>
                {
                    b.Property<Guid>("PayrollTypeId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PayrollTypeName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("PayrollTypeId");

                    b.ToTable("payroll_type");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.PermitRequest", b =>
                {
                    b.Property<Guid>("PermitRequestId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("EmployeeId");

                    b.Property<TimeSpan?>("FromHour");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NoTransaction")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("PermitDate")
                        .HasColumnType("date");

                    b.Property<string>("ReasonRejected")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<TimeSpan?>("UntilHour");

                    b.HasKey("PermitRequestId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("permit_request");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Position", b =>
                {
                    b.Property<Guid>("PositionId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PositionCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("PositionLevel");

                    b.Property<string>("PositionName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("PositionId");

                    b.ToTable("position");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Punishment", b =>
                {
                    b.Property<Guid>("PunishmentId");

                    b.Property<Guid?>("ActionTakenId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("EmployeeId");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NoTransaction")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ValidDate")
                        .HasColumnType("date");

                    b.HasKey("PunishmentId");

                    b.HasIndex("ActionTakenId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("punishment");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.TaxRate", b =>
                {
                    b.Property<Guid>("TaxRateId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<double?>("FromAmount");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("RatePercent");

                    b.Property<double?>("ToAmount");

                    b.HasKey("TaxRateId");

                    b.ToTable("tax_rate");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.TaxStatus", b =>
                {
                    b.Property<Guid>("TaxStatusId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("Ptkp")
                        .HasColumnName("ptkp");

                    b.Property<string>("TaxStatusName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("TaxStatusId");

                    b.ToTable("tax_status");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Training", b =>
                {
                    b.Property<Guid>("TrainingId");

                    b.Property<bool?>("Certified")
                        .HasColumnName("certified");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("EmployeeId");

                    b.Property<string>("Fasilitator")
                        .HasColumnName("fasilitator")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("Instructure")
                        .HasColumnName("instructure")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NoTransaction")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Provider")
                        .HasColumnName("provider")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Subject")
                        .HasColumnName("subject")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("TrainingTypeId");

                    b.Property<DateTime?>("UntilDate")
                        .HasColumnType("date");

                    b.HasKey("TrainingId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TrainingTypeId");

                    b.ToTable("training");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.TrainingType", b =>
                {
                    b.Property<Guid>("TrainingTypeId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TrainingTypeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("TrainingTypeName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("TrainingTypeId");

                    b.ToTable("training_type");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.TravellingExpense", b =>
                {
                    b.Property<Guid>("TravellingExpenseId");

                    b.Property<double?>("Amount");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Destination")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<Guid?>("EmployeeId");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NoTransaction")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<Guid?>("TravellingTypeId");

                    b.Property<DateTime?>("UntilDate")
                        .HasColumnType("date");

                    b.HasKey("TravellingExpenseId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TravellingTypeId");

                    b.ToTable("travelling_expense");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.TravellingType", b =>
                {
                    b.Property<Guid>("TravellingTypeId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ModifyBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TravellingTypeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("TravellingTypeName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("TravellingTypeId");

                    b.ToTable("travelling_type");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Attendance", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.AbsenceType", "AbsenceType")
                        .WithMany("Attendance")
                        .HasForeignKey("AbsenceTypeId")
                        .HasConstraintName("FK_attendance_absence_type");

                    b.HasOne("Hris.Infrastructure.Database.Models.DayType", "DayType")
                        .WithMany("Attendance")
                        .HasForeignKey("DayTypeId")
                        .HasConstraintName("FK_attendance_day_type");

                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("Attendance")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_attendance_employee");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Division", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Department", "Department")
                        .WithMany("Division")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_division_department");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Employee", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Branch", "Branch")
                        .WithMany("Employee")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_employee_branch");

                    b.HasOne("Hris.Infrastructure.Database.Models.DayType", "DayType")
                        .WithMany("Employee")
                        .HasForeignKey("DayTypeId")
                        .HasConstraintName("FK_employee_day_type");

                    b.HasOne("Hris.Infrastructure.Database.Models.Department", "Department")
                        .WithMany("Employee")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_employee_department");

                    b.HasOne("Hris.Infrastructure.Database.Models.Division", "Division")
                        .WithMany("Employee")
                        .HasForeignKey("DivisionId")
                        .HasConstraintName("FK_employee_division");

                    b.HasOne("Hris.Infrastructure.Database.Models.Education", "Education")
                        .WithMany("Employee")
                        .HasForeignKey("EducationId")
                        .HasConstraintName("FK_employee_education");

                    b.HasOne("Hris.Infrastructure.Database.Models.EmployeeStatus", "EmployeeStatus")
                        .WithMany("Employee")
                        .HasForeignKey("EmployeeStatusId")
                        .HasConstraintName("FK_employee_employee_status");

                    b.HasOne("Hris.Infrastructure.Database.Models.EmployeeType", "EmployeeType")
                        .WithMany("Employee")
                        .HasForeignKey("EmployeeTypeId")
                        .HasConstraintName("FK_employee_employee_type");

                    b.HasOne("Hris.Infrastructure.Database.Models.Grade", "Grade")
                        .WithMany("Employee")
                        .HasForeignKey("GradeId")
                        .HasConstraintName("FK_employee_grade");

                    b.HasOne("Hris.Infrastructure.Database.Models.PayrollType", "PayrollType")
                        .WithMany("Employee")
                        .HasForeignKey("PayrollTypeId")
                        .HasConstraintName("FK_employee_payroll_type");

                    b.HasOne("Hris.Infrastructure.Database.Models.Position", "Position")
                        .WithMany("Employee")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK_employee_position");

                    b.HasOne("Hris.Infrastructure.Database.Models.TaxStatus", "TaxStatus")
                        .WithMany("Employee")
                        .HasForeignKey("TaxStatusId")
                        .HasConstraintName("FK_employee_tax_status");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeAsset", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Asset", "Asset")
                        .WithMany("EmployeeAsset")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_employee_asset_asset");

                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("EmployeeAsset")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_employee_asset_employee");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeEducationFormal", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("EmployeeEducationFormal")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_employee_education_formal_employee");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeEducationUnformal", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("EmployeeEducationUnformal")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_employee_education_unformal_employee");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeExperience", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("EmployeeExperience")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_employee_experience_employee");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeFamily", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Education", "Education")
                        .WithMany("EmployeeFamily")
                        .HasForeignKey("EducationId")
                        .HasConstraintName("FK_employee_family_employee_family");

                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("EmployeeFamily")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_employee_family_employee");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeSalary", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("EmployeeSalary")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_employee_salary_employee");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.EmployeeSkill", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("EmployeeSkill")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_employee_skill_employee");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.LeaveRemaining", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("LeaveRemaining")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_leave_remaining_employee");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.LeavingRequest", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("LeavingRequest")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_leaving_request_employee");

                    b.HasOne("Hris.Infrastructure.Database.Models.LeavingType", "LeavingType")
                        .WithMany("LeavingRequest")
                        .HasForeignKey("LeavingTypeId")
                        .HasConstraintName("FK_leaving_request_leaving_type");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.MedicalReimbursement", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("MedicalReimbursement")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_medical_reimbursement_employee");

                    b.HasOne("Hris.Infrastructure.Database.Models.MedicalType", "MedicalType")
                        .WithMany("MedicalReimbursement")
                        .HasForeignKey("MedicalTypeId")
                        .HasConstraintName("FK_medical_reimbursement_medical_type");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.PermitRequest", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("PermitRequest")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_permit_request_employee");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Punishment", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.ActionTaken", "ActionTaken")
                        .WithMany("Punishment")
                        .HasForeignKey("ActionTakenId")
                        .HasConstraintName("FK_punishment_action_taken");

                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("Punishment")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_punishment_employee");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.Training", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("Training")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_training_employee");

                    b.HasOne("Hris.Infrastructure.Database.Models.TrainingType", "TrainingType")
                        .WithMany("Training")
                        .HasForeignKey("TrainingTypeId")
                        .HasConstraintName("FK_training_training_type");
                });

            modelBuilder.Entity("Hris.Infrastructure.Database.Models.TravellingExpense", b =>
                {
                    b.HasOne("Hris.Infrastructure.Database.Models.Employee", "Employee")
                        .WithMany("TravellingExpense")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_travelling_expense_employee");

                    b.HasOne("Hris.Infrastructure.Database.Models.TravellingType", "TravellingType")
                        .WithMany("TravellingExpense")
                        .HasForeignKey("TravellingTypeId")
                        .HasConstraintName("FK_travelling_expense_travelling_type");
                });
#pragma warning restore 612, 618
        }
    }
}
